description: >
  Add this job to your workflow with no require statements.
  This job will run in parallel with the rest of your workflow for monitoring
  and will exit when all other jobs have completed.
parameters:
  circle-token:
    type: env_var_name
    default: "CIRCLE_TOKEN"
    description: >
      Enter your CircleCI Personal Access Token for interacting with the API.
      You may generate one here: https://circleci.com/account/api
  giphy-token:
    type: env_var_name
    default: "GIPHY_TOKEN"
    description: >
      Enter your giphy Personal Access Token for interacting with their API.
      You may generate one here: https://developers.giphy.com/docs/api/
  giphy-success-keyword:
    type: string
    default: "party"
  giphy-failure-keyword:
    type: string
    default: "broken"
  channel:
    type: string
    description: "Enter the slack Channel to post to (e.g. C15R5NJ7RM5)"
  post-process-channel:
    type: string
    default: ""
    description: |
      (Optional) If configured, a small placeholder message will be posted to this channel when the workflow starts and the 'ts' id will added to the global environment Variables for this Build.
      When the process has finished the message will be updated with an update
  post-process-branch-pattern:
    description: |
      A comma separated list of regex matchable branch names. post-process-messages will only be sent if post-process-channel is configured and the job matches one of these branches.
      By default ".+" will be used to match all branches. Pattern must match the full string, no partial matches. (post-process-branch-pattern & post-process-tag-pattern are used in OR together)
    type: string
    default: ".+"
  post-process-tag-pattern:
    description: |
      A comma separated list of regex matchable tag names. post-process-messages will only be sent if post-process-channel is configured and the job matches one of these tags.
      By default ".+" will be used to match all tags. Pattern must match the full string, no partial matches. (post-process-branch-pattern & post-process-tag-pattern are used in OR together)
    type: string
    default: ".+"
  post-process-invert-match:
    default: false
    description: >
      Invert the post-process-branch-pattern and post-process-tag-pattern patterns.

      If set to true, notifications will only be sent if sent from a job from
      branches and tags that do not match the patterns.
    type: boolean
  post-process-custom-image:
    description: An image file to use as an accessory to the post-process-custom-message-*
    type: string
    default: "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png"
  post-process-custom-message-started:
    description: |
      Enter a custom message template which will be sent to post-process-channel when the process starts.
      1. Create your message template using the Block Kit Builder: https://app.slack.com/block-kit-builder/.
      2. Insert any desired environment variables.
      3. Paste value here.
    type: string
    default: <<include(message_templates/post-process-started.json)>>
  post-process-custom-message-passed:
    description: |
      Enter a custom message template which will replace the post-process-custom-message-started message already sent to post-process-channel when the process Finishes in a successful state.
      1. Create your message template using the Block Kit Builder: https://app.slack.com/block-kit-builder/.
      2. Insert any desired environment variables.
      3. Paste value here.
    type: string
    default: <<include(message_templates/post-process-passed.json)>>
  post-process-custom-message-failed:
    description: |
      Enter a custom message template which will replace the post-process-custom-message-started message already sent to post-process-channel when the process Finishes but in a failed state.
      1. Create your message template using the Block Kit Builder: https://app.slack.com/block-kit-builder/.
      2. Insert any desired environment variables.
      3. Paste value here.
    type: string
    default: <<include(message_templates/post-process-failed.json)>>
  post-process-pass-mentions:
    description: |
      Mention when the overall status is pass.
      Exports to the "$SLACK_PARAM_MENTIONS" environment variable for use in templates.
      Mention users via the @ symbol: "@USER"
      If the username contains a space, the Slack ID must be used with angled brackets: "<@U8XXXXXXX>"
    type: string
    default: ""
  post-process-fail-mentions:
    description: |
      Mention when the overall status is fail.
      Exports to the "$SLACK_PARAM_MENTIONS" environment variable for use in templates.
      Mention users via the @ symbol: "@USER"
      If the username contains a space, the Slack ID must be used with angled brackets: "<@U8XXXXXXX>"
    type: string
    default: ""

  circleci_host:
      description: |
       A CircleCI Host which used in a message template.
      type: string
      default: https://circleci.com

  workflow-name:
    type: string

steps:
  - checkout
  - run:
      environment:
        GIPHY_SUCCESS_KEYWORD: << parameters.giphy-success-keyword>>
        GIPHY_FAILURE_KEYWORD: << parameters.giphy-failure-keyword>>
        WORKFLOW_NAME: << parameters.workflow-name >>
        SLACK_CHANNEL: << parameters.channel >>
        SLACK_PARAM_BRANCHPATTERN: "<<parameters.post-process-branch-pattern>>"
        SLACK_PARAM_TAGPATTERN: "<<parameters.post-process-tag-pattern>>"
        SLACK_PARAM_INVERT_MATCH: "<<parameters.post-process-invert-match>>"
        SLACK_PARAM_IGNORE_ERRORS: false
        SLACK_PARAM_DEBUG: true
        SLACK_PARAM_CIRCLECI_HOST: "<<parameters.circleci_host>>"
        SLACK_SCRIPT_UTILS: "<<include(scripts/utils.sh)>>"
        SLACK_SCRIPT_NOTIFY: "<<include(scripts/notify.sh)>>"
        POST_PROCESS_CHANNELS: "<< parameters.post-process-channel >>"
        POST_PROCESS_CUSTOM_IMAGE: "<< parameters.post-process-custom-image >>"
        POST_PROCESS_CUSTOM_MESSAGE_STARTED: "<< parameters.post-process-custom-message-started >>"
        POST_PROCESS_CUSTOM_MESSAGE_FAILED: "<< parameters.post-process-custom-message-failed >>"
        POST_PROCESS_CUSTOM_MESSAGE_PASSED: "<< parameters.post-process-custom-message-passed >>"
        POST_PROCESS_PASS_MENTIONS: "<<parameters.post-process-pass-mentions>>"
        POST_PROCESS_FAIL_MENTIONS: "<<parameters.post-process-fail-mentions>>"

      name: Runnning Slack Workflow Monitor
      command: <<include(scripts/slack-workflow-monitor.sh)>>
